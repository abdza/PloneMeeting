<?xml version="1.0"?>
<dc-workflow workflow_id="meetingadvice_workflow"
             title="meetingadvice_workflow"
             state_variable="review_state"
             initial_state="advicecreated"
             xmlns:i18n="http://xml.zope.org/namespaces/i18n"
             i18n:domain="plone">
 <permission>ModifyPortalContent</permission>
 <permission>DeleteObjects</permission>
 <permission>AccessContentsInformation</permission>
 <permission>View</permission>
 <permission>ReviewPortalContent</permission>
 <permission>Access contents information</permission>
 <state state_id="adviceclosed"
        title="adviceclosed"
        i18n:attributes="title">
  <exit-transition transition_id="adviceBackToPublished"/>
  <permission-map name="DeleteObjects"
                  acquired="False">
   <permission-role>Manager</permission-role>
  </permission-map>
  <permission-map name="ModifyPortalContent"
                  acquired="False">
   <permission-role>Manager</permission-role>
  </permission-map>
  <permission-map name="ReviewPortalContent"
                  acquired="False">
   <permission-role>Manager</permission-role>
  </permission-map>
 </state>
 <state state_id="advicecreated"
        title="advicecreated"
        i18n:attributes="title">
  <exit-transition transition_id="advicePublish"/>
  <permission-map name="Access contents information"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingAdviceEditor</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="AccessContentsInformation"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingAdviceEditor</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="DeleteObjects"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingAdviceEditor</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="ModifyPortalContent"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingAdviceEditor</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="ReviewPortalContent"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingAdviceEditor</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="View"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingAdviceEditor</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
 </state>
 <state state_id="advicepublished"
        title="advicepublished"
        i18n:attributes="title">
  <exit-transition transition_id="adviceBackToCreated"/>
  <exit-transition transition_id="adviceClose"/>
  <permission-map name="DeleteObjects"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="ModifyPortalContent"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
  <permission-map name="ReviewPortalContent"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>MeetingManager</permission-role>
  </permission-map>
 </state>
 <transition transition_id="adviceBackToCreated"
             title="adviceBackToCreated"
             new_state="advicecreated"
             trigger="USER"
             before_script=""
             after_script=""
             i18n:attributes="title">
  <action url="" category="workflow" i18n:translate="">adviceBackToCreated</action>
  <guard>
    <guard-expression>python:here.wfConditions().mayBackToCreated()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="adviceBackToPublished"
             title="adviceBackToPublished"
             new_state="advicepublished"
             trigger="USER"
             before_script=""
             after_script=""
             i18n:attributes="title">
  <action url="" category="workflow" i18n:translate="">adviceBackToPublished</action>
  <guard>
    <guard-expression>python:here.wfConditions().mayBackToPublished()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="adviceClose"
             title="adviceClose"
             new_state="adviceclosed"
             trigger="USER"
             before_script=""
             after_script=""
             i18n:attributes="title">
  <action url="" category="workflow" i18n:translate="">adviceClose</action>
  <guard>
    <guard-expression>python:here.wfConditions().mayClose()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="advicePublish"
             title="advicePublish"
             new_state="advicepublished"
             trigger="USER"
             before_script=""
             after_script=""
             i18n:attributes="title">
  <action url="" category="workflow" i18n:translate="">advicePublish</action>
  <guard>
    <guard-expression>python:here.wfConditions().mayPublish()</guard-expression>
  </guard>
 </transition>
 <variable variable_id="action" for_catalog="False"
           for_status="True" update_always="True">
  <description>The last transition</description>
  <default>
   <expression>transition/getId|nothing</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="actor" for_catalog="False"
           for_status="True" update_always="True">
  <description>The ID of the user who performed the last transition</description>
  <default>
   <expression>user/getId</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="comments" for_catalog="False"
           for_status="True" update_always="True">
  <description>Comments about the last transition</description>
  <default>
   <expression>python:state_change.kwargs.get('comment', '')</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="review_history" for_catalog="False"
           for_status="False" update_always="False">
  <description>Provides access to workflow history</description>
  <default>
   <expression>state_change/getHistory</expression>
  </default>
  <guard>
   <guard-permission>Request review</guard-permission>
   <guard-permission>Review portal content</guard-permission>
  </guard>
 </variable>
 <variable variable_id="time" for_catalog="False"
           for_status="True" update_always="True">
  <description>Time of the last transition</description>
  <default>
   <expression>state_change/getDateTime</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <!-- We dont use workflow scripts any more, we use subscribers -->
</dc-workflow>
